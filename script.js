let pipeUpImg, pipeDownImg, birdImg; let bird; let pipes = []; let currentScene = "menu"; /*PRELOAD FUNC*/ function preload() {pipeUpImg = loadImage("pipe_up.png"); pipeDownImg = loadImage("pipe_down.png"); birdImg = loadImage("bird.png");} function setup() {createCanvas(600, 600); bird = new Bird(width/2, 0); for (let i = 0; i < 4; i++) {if (i % 2 == 0) pipes.push(new Pipe(width+i*300+300, random(300, 400))); else pipes.push(new Pipe(width+i*300, random(-300, -200)))}; noStroke(); noSmooth();} /*DRAW FUNC*/ function draw() {if (currentScene == "game") drawGameScene(); if (currentScene == "death") drawDeathScene(); if (currentScene == "menu") drawMenuScene();} /*BIRD CLASS*/ class Bird {constructor(x, y) {this.gravity = 0.75; this.jumpForce = 10; this.pos = createVector(x, y); this.acc = createVector(0, 0); this.vel = createVector(0, 0);} draw() {image(birdImg, this.pos.x, this.pos.y, 90, 70);} flap() {this.vel.y = -this.jumpForce} fall() {this.acc.y += this.gravity; this.vel; this.vel.y += this.acc.y; this.pos.y += round(this.vel.y); this.acc.y = 0;} die() {currentScene = "death"; this.pos.x = width/2; this.pos.y = 0; for (let i = 0; i < pipes.length; i++) {if (i % 2 == 0) {pipes[i].pos.x = width+i*300+300; pipes[i].pos.y = random(400, 500);} else {pipes[i].pos.x = width+i*300; pipes[i].y = random(-300, -200)};} this.vel.y = 0;}} /*PIPE CLASS*/ class Pipe {constructor(x, y) {this.pos = createVector(x, y);} draw() {fill(0, 255, 0); rect(this.pos.x, this.pos.y, 200, 400);} checkCollisions() {for (let i = 0; i < pipes.length; i++) {if (rectCollide(bird.pos.x, bird.pos.y, 90-10, 70-10, pipes[i].pos.x, pipes[i].pos.y, 200, 400)) {bird.die();} }}} /*OTHER STUFF*/ function rectCollide(x1, y1, w1, h1, x2, y2, w2, h2) {return x1 + w1 > x2 && x1 < x2 + w2 && y1 + h1 > y2 && y1 < y2 + h2;} function mouseClicked() {bird.flap();} /*GAME SCENE*/ function drawGameScene() {background(133, 224, 255); bird.draw(); bird.fall(); for (let i = 0; i < pipes.length; i++) { pipes[i].draw(); if (i % 2 == 0) image(pipeUpImg, pipes[i].pos.x, pipes[i].pos.y, 200, 400); else image(pipeDownImg, pipes[i].pos.x, pipes[i].pos.y, 200, 400); pipes[i].pos.x -= 4; pipes[i].checkCollisions(); if (pipes[i].pos.x <= -200) {if (i % 2 == 0) {pipes[i].pos.x = width+2*300-200; pipes[i].pos.y = random(300, 400);} else {pipes[i].pos.x = width+2*300-200; pipes[i].pos.y = random(-300, -200)}}} if (bird.pos.y >= width+50) bird.die();} /*DEATH SCENE*/ function drawDeathScene() {background(255, 0, 0); push(); fill(0); textAlign(CENTER); textSize(72); text("You dead lol", width/2, height/2); textSize(24); text("Press SPACE to Restart", width/2, height-100);} function keyPressed() {if (keyCode == 32 && currentScene == "death") currentScene = "game"; if (keyCode == 32 && currentScene == "menu") currentScene = "game";} /*MENU SCENE*/ function drawMenuScene() {background(255, 255, 0); push(); textAlign(CENTER); textSize(50); if (frameCount % 15 == 0) textSize(45); fill(0); text("FLAPPY BIRD", width/2, 75); textSize(18); text("(but I programmed it in only 1 line of code)", width/2, 100); textSize(24); text("Press SPACE to Start\n\n(Click to Flap)", width/2, height-100); pop();}